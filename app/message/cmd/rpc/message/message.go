// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package message

import (
	"context"

	"TikTokLite/app/message/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DouyinMessageActionRequest  = pb.DouyinMessageActionRequest
	DouyinMessageActionResponse = pb.DouyinMessageActionResponse
	DouyinMessageChatRequest    = pb.DouyinMessageChatRequest
	DouyinMessageChatResponse   = pb.DouyinMessageChatResponse
	Message                     = pb.Message

	MessageZrpcClient interface {
		Chat(ctx context.Context, in *DouyinMessageChatRequest, opts ...grpc.CallOption) (*DouyinMessageChatResponse, error)
		Action(ctx context.Context, in *DouyinMessageActionRequest, opts ...grpc.CallOption) (*DouyinMessageActionResponse, error)
	}

	defaultMessageZrpcClient struct {
		cli zrpc.Client
	}
)

func NewMessageZrpcClient(cli zrpc.Client) MessageZrpcClient {
	return &defaultMessageZrpcClient{
		cli: cli,
	}
}

func (m *defaultMessageZrpcClient) Chat(ctx context.Context, in *DouyinMessageChatRequest, opts ...grpc.CallOption) (*DouyinMessageChatResponse, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.Chat(ctx, in, opts...)
}

func (m *defaultMessageZrpcClient) Action(ctx context.Context, in *DouyinMessageActionRequest, opts ...grpc.CallOption) (*DouyinMessageActionResponse, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}
